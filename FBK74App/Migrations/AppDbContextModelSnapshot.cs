// <auto-generated />
using System;
using FBK74App.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FBK74App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FBK74App.models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5231),
                            Email = "user1@example.com",
                            Password = "pass1",
                            PhoneNumber = "1234567890",
                            Status = "Active",
                            Type = 0,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5243),
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5247),
                            Email = "user2@example.com",
                            Password = "pass2",
                            PhoneNumber = "1234567891",
                            Status = "Inactive",
                            Type = 1,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5248),
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5251),
                            Email = "user3@example.com",
                            Password = "pass3",
                            PhoneNumber = "1234567892",
                            Status = "Active",
                            Type = 0,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5252),
                            UserName = "user3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5254),
                            Email = "user4@example.com",
                            Password = "pass4",
                            PhoneNumber = "1234567893",
                            Status = "Inactive",
                            Type = 1,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5255),
                            UserName = "user4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5257),
                            Email = "user5@example.com",
                            Password = "pass5",
                            PhoneNumber = "1234567894",
                            Status = "Active",
                            Type = 0,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5258),
                            UserName = "user5"
                        });
                });

            modelBuilder.Entity("FBK74App.models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Account2Id")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisteredFootballFieldId")
                        .HasColumnType("int");

                    b.Property<int?>("RegisteredFootballFieldId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Account2Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RegisteredFootballFieldId");

                    b.HasIndex("RegisteredFootballFieldId1");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account2Id = 1,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5752),
                            Invoice = "INV001",
                            PaymentDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5751),
                            RegisteredFootballFieldId = 1,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5753)
                        },
                        new
                        {
                            Id = 2,
                            Account2Id = 2,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5757),
                            Invoice = "INV002",
                            PaymentDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5756),
                            RegisteredFootballFieldId = 2,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5758)
                        },
                        new
                        {
                            Id = 3,
                            Account2Id = 3,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5761),
                            Invoice = "INV003",
                            PaymentDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5760),
                            RegisteredFootballFieldId = 3,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5762)
                        },
                        new
                        {
                            Id = 4,
                            Account2Id = 4,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5764),
                            Invoice = "INV004",
                            PaymentDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5763),
                            RegisteredFootballFieldId = 4,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5765)
                        },
                        new
                        {
                            Id = 5,
                            Account2Id = 5,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5767),
                            Invoice = "INV005",
                            PaymentDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5767),
                            RegisteredFootballFieldId = 5,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5768)
                        });
                });

            modelBuilder.Entity("FBK74App.models.FootballField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FootballFields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Field1",
                            Price = 100.0m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Field2",
                            Price = 200.0m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Field3",
                            Price = 300.0m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Field4",
                            Price = 400.0m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Field5",
                            Price = 500.0m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FBK74App.models.FootballFieldSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FootballFieldId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FootballFieldId");

                    b.ToTable("FootballFieldSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5979),
                            EndTime = new DateTime(2024, 10, 28, 1, 32, 39, 855, DateTimeKind.Local).AddTicks(5978),
                            FootballFieldId = 1,
                            StartTime = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5977),
                            Status = "Scheduled",
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5980)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5984),
                            EndTime = new DateTime(2024, 10, 28, 1, 32, 39, 855, DateTimeKind.Local).AddTicks(5983),
                            FootballFieldId = 2,
                            StartTime = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5982),
                            Status = "Scheduled",
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5985)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5989),
                            EndTime = new DateTime(2024, 10, 28, 1, 32, 39, 855, DateTimeKind.Local).AddTicks(5988),
                            FootballFieldId = 3,
                            StartTime = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5987),
                            Status = "Scheduled",
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5990)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5993),
                            EndTime = new DateTime(2024, 10, 28, 1, 32, 39, 855, DateTimeKind.Local).AddTicks(5992),
                            FootballFieldId = 4,
                            StartTime = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5991),
                            Status = "Scheduled",
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5994)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5997),
                            EndTime = new DateTime(2024, 10, 28, 1, 32, 39, 855, DateTimeKind.Local).AddTicks(5996),
                            FootballFieldId = 5,
                            StartTime = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5995),
                            Status = "Scheduled",
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5998)
                        });
                });

            modelBuilder.Entity("FBK74App.models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5595),
                            Description = "Description1",
                            Image = "image1.jpg",
                            Name = "Product1",
                            Quantity = 10,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5596)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5599),
                            Description = "Description2",
                            Image = "image2.jpg",
                            Name = "Product2",
                            Quantity = 20,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5600)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5602),
                            Description = "Description3",
                            Image = "image3.jpg",
                            Name = "Product3",
                            Quantity = 30,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5603)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5605),
                            Description = "Description4",
                            Image = "image4.jpg",
                            Name = "Product4",
                            Quantity = 40,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5605)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5607),
                            Description = "Description5",
                            Image = "image5.jpg",
                            Name = "Product5",
                            Quantity = 50,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5608)
                        });
                });

            modelBuilder.Entity("FBK74App.models.ProductDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillId = 1,
                            ProductId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 2,
                            BillId = 2,
                            ProductId = 2,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 3,
                            BillId = 3,
                            ProductId = 3,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 4,
                            BillId = 4,
                            ProductId = 4,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 5,
                            BillId = 5,
                            ProductId = 5,
                            Quantity = 25
                        });
                });

            modelBuilder.Entity("FBK74App.models.RegistFindOppoent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Account1Id")
                        .HasColumnType("int");

                    b.Property<int>("Account2Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Power")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfFootballField")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Account1Id");

                    b.HasIndex("Account2Id");

                    b.ToTable("RegistFindOppoents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account1Id = 1,
                            Account2Id = 2,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5881),
                            Date = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5878),
                            Deposit = 100.0m,
                            EndTime = new DateTime(2024, 10, 28, 1, 32, 39, 855, DateTimeKind.Local).AddTicks(5870),
                            Name = "Opponent1",
                            Phone = "1234567890",
                            Power = "High",
                            StartTime = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5869),
                            Status = 1,
                            TypeOfFootballField = 1,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5882)
                        },
                        new
                        {
                            Id = 2,
                            Account1Id = 2,
                            Account2Id = 3,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5888),
                            Date = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5886),
                            Deposit = 200.0m,
                            EndTime = new DateTime(2024, 10, 28, 1, 32, 39, 855, DateTimeKind.Local).AddTicks(5885),
                            Name = "Opponent2",
                            Phone = "1234567891",
                            Power = "Medium",
                            StartTime = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5884),
                            Status = 2,
                            TypeOfFootballField = 2,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5889)
                        },
                        new
                        {
                            Id = 3,
                            Account1Id = 3,
                            Account2Id = 4,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5896),
                            Date = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5894),
                            Deposit = 300.0m,
                            EndTime = new DateTime(2024, 10, 28, 1, 32, 39, 855, DateTimeKind.Local).AddTicks(5893),
                            Name = "Opponent3",
                            Phone = "1234567892",
                            Power = "Low",
                            StartTime = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5892),
                            Status = 3,
                            TypeOfFootballField = 3,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5897)
                        },
                        new
                        {
                            Id = 4,
                            Account1Id = 4,
                            Account2Id = 5,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5903),
                            Date = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5901),
                            Deposit = 400.0m,
                            EndTime = new DateTime(2024, 10, 28, 1, 32, 39, 855, DateTimeKind.Local).AddTicks(5900),
                            Name = "Opponent4",
                            Phone = "1234567893",
                            Power = "High",
                            StartTime = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5899),
                            Status = 1,
                            TypeOfFootballField = 1,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5903)
                        },
                        new
                        {
                            Id = 5,
                            Account1Id = 5,
                            Account2Id = 1,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5909),
                            Date = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5907),
                            Deposit = 500.0m,
                            EndTime = new DateTime(2024, 10, 28, 1, 32, 39, 855, DateTimeKind.Local).AddTicks(5906),
                            Name = "Opponent5",
                            Phone = "1234567894",
                            Power = "Medium",
                            StartTime = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5905),
                            Status = 2,
                            TypeOfFootballField = 2,
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5909)
                        });
                });

            modelBuilder.Entity("FBK74App.models.RegisteredFootballField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Account1Id")
                        .HasColumnType("int");

                    b.Property<int>("Account2Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FootballFieldScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistFindOppoentId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Account1Id");

                    b.HasIndex("Account2Id");

                    b.HasIndex("FootballFieldScheduleId");

                    b.HasIndex("RegistFindOppoentId");

                    b.ToTable("RegisteredFootballFields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account1Id = 1,
                            Account2Id = 2,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5809),
                            Date = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5807),
                            Deposit = 100.0m,
                            FootballFieldScheduleId = 1,
                            Name = "Field1",
                            Note = "Note1",
                            RegistFindOppoentId = 1,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5810)
                        },
                        new
                        {
                            Id = 2,
                            Account1Id = 2,
                            Account2Id = 3,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5815),
                            Date = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5814),
                            Deposit = 200.0m,
                            FootballFieldScheduleId = 2,
                            Name = "Field2",
                            Note = "Note2",
                            RegistFindOppoentId = 2,
                            Status = "Inactive",
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5816)
                        },
                        new
                        {
                            Id = 3,
                            Account1Id = 3,
                            Account2Id = 4,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5820),
                            Date = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5819),
                            Deposit = 300.0m,
                            FootballFieldScheduleId = 3,
                            Name = "Field3",
                            Note = "Note3",
                            RegistFindOppoentId = 3,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5821)
                        },
                        new
                        {
                            Id = 4,
                            Account1Id = 4,
                            Account2Id = 5,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5825),
                            Date = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5824),
                            Deposit = 400.0m,
                            FootballFieldScheduleId = 4,
                            Name = "Field4",
                            Note = "Note4",
                            RegistFindOppoentId = 4,
                            Status = "Inactive",
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5825)
                        },
                        new
                        {
                            Id = 5,
                            Account1Id = 5,
                            Account2Id = 1,
                            CreatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5830),
                            Date = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5828),
                            Deposit = 500.0m,
                            FootballFieldScheduleId = 5,
                            Name = "Field5",
                            Note = "Note5",
                            RegistFindOppoentId = 5,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 10, 27, 23, 32, 39, 855, DateTimeKind.Local).AddTicks(5831)
                        });
                });

            modelBuilder.Entity("FBK74App.models.Bill", b =>
                {
                    b.HasOne("FBK74App.models.Account", "Account2")
                        .WithMany()
                        .HasForeignKey("Account2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FBK74App.models.Account", null)
                        .WithMany("Bills")
                        .HasForeignKey("AccountId");

                    b.HasOne("FBK74App.models.RegisteredFootballField", "RegisteredFootballField")
                        .WithMany()
                        .HasForeignKey("RegisteredFootballFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FBK74App.models.RegisteredFootballField", null)
                        .WithMany("Bills")
                        .HasForeignKey("RegisteredFootballFieldId1");

                    b.Navigation("Account2");

                    b.Navigation("RegisteredFootballField");
                });

            modelBuilder.Entity("FBK74App.models.FootballFieldSchedule", b =>
                {
                    b.HasOne("FBK74App.models.FootballField", "FootballField")
                        .WithMany("FootballFieldSchedules")
                        .HasForeignKey("FootballFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FootballField");
                });

            modelBuilder.Entity("FBK74App.models.ProductDetail", b =>
                {
                    b.HasOne("FBK74App.models.Bill", "Bill")
                        .WithMany("Products")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FBK74App.models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FBK74App.models.RegistFindOppoent", b =>
                {
                    b.HasOne("FBK74App.models.Account", "Account1")
                        .WithMany()
                        .HasForeignKey("Account1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FBK74App.models.Account", "Account2")
                        .WithMany()
                        .HasForeignKey("Account2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account1");

                    b.Navigation("Account2");
                });

            modelBuilder.Entity("FBK74App.models.RegisteredFootballField", b =>
                {
                    b.HasOne("FBK74App.models.Account", "Account1")
                        .WithMany()
                        .HasForeignKey("Account1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FBK74App.models.Account", "Account2")
                        .WithMany()
                        .HasForeignKey("Account2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FBK74App.models.FootballFieldSchedule", "FootballFieldSchedule")
                        .WithMany()
                        .HasForeignKey("FootballFieldScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FBK74App.models.RegistFindOppoent", "RegistFindOppoent")
                        .WithMany()
                        .HasForeignKey("RegistFindOppoentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account1");

                    b.Navigation("Account2");

                    b.Navigation("FootballFieldSchedule");

                    b.Navigation("RegistFindOppoent");
                });

            modelBuilder.Entity("FBK74App.models.Account", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("FBK74App.models.Bill", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FBK74App.models.FootballField", b =>
                {
                    b.Navigation("FootballFieldSchedules");
                });

            modelBuilder.Entity("FBK74App.models.Product", b =>
                {
                    b.Navigation("ProductDetails");
                });

            modelBuilder.Entity("FBK74App.models.RegisteredFootballField", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
